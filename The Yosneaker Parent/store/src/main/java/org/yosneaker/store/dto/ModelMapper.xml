<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.yosneaker.store.dao.ModelMapper" >
  <resultMap id="BaseResultMap" type="org.yosneaker.store.dto.Model" >
    <id column="model_id" property="modelId" jdbcType="INTEGER" />
    <result column="model_name" property="modelName" jdbcType="VARCHAR" />
    <result column="model_series" property="modelSeries" jdbcType="VARCHAR" />
    <result column="brand_id" property="brandId" jdbcType="INTEGER" />
    <result column="Art_No" property="artNo" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="org.yosneaker.store.dto.Model" extends="BaseResultMap" >
    <result column="model_story" property="modelStory" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    model_id, model_name, model_series, brand_id, Art_No
  </sql>
  <sql id="Blob_Column_List" >
    model_story
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="org.yosneaker.store.dto.ModelExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sneaker_model
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.yosneaker.store.dto.ModelExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sneaker_model
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="MysqlSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sneaker_model
    where model_id = #{modelId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sneaker_model
    where model_id = #{modelId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.yosneaker.store.dto.ModelExample" >
    delete from sneaker_model
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.yosneaker.store.dto.Model" >
    insert into sneaker_model (model_id, model_name, model_series, 
      brand_id, Art_No, model_story
      )
    values (#{modelId,jdbcType=INTEGER}, #{modelName,jdbcType=VARCHAR}, #{modelSeries,jdbcType=VARCHAR}, 
      #{brandId,jdbcType=INTEGER}, #{artNo,jdbcType=VARCHAR}, #{modelStory,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.yosneaker.store.dto.Model" >
    insert into sneaker_model
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="modelId != null" >
        model_id,
      </if>
      <if test="modelName != null" >
        model_name,
      </if>
      <if test="modelSeries != null" >
        model_series,
      </if>
      <if test="brandId != null" >
        brand_id,
      </if>
      <if test="artNo != null" >
        Art_No,
      </if>
      <if test="modelStory != null" >
        model_story,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="modelId != null" >
        #{modelId,jdbcType=INTEGER},
      </if>
      <if test="modelName != null" >
        #{modelName,jdbcType=VARCHAR},
      </if>
      <if test="modelSeries != null" >
        #{modelSeries,jdbcType=VARCHAR},
      </if>
      <if test="brandId != null" >
        #{brandId,jdbcType=INTEGER},
      </if>
      <if test="artNo != null" >
        #{artNo,jdbcType=VARCHAR},
      </if>
      <if test="modelStory != null" >
        #{modelStory,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.yosneaker.store.dto.ModelExample" resultType="java.lang.Integer" >
    select count(*) from sneaker_model
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sneaker_model
    <set >
      <if test="record.modelId != null" >
        model_id = #{record.modelId,jdbcType=INTEGER},
      </if>
      <if test="record.modelName != null" >
        model_name = #{record.modelName,jdbcType=VARCHAR},
      </if>
      <if test="record.modelSeries != null" >
        model_series = #{record.modelSeries,jdbcType=VARCHAR},
      </if>
      <if test="record.brandId != null" >
        brand_id = #{record.brandId,jdbcType=INTEGER},
      </if>
      <if test="record.artNo != null" >
        Art_No = #{record.artNo,jdbcType=VARCHAR},
      </if>
      <if test="record.modelStory != null" >
        model_story = #{record.modelStory,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update sneaker_model
    set model_id = #{record.modelId,jdbcType=INTEGER},
      model_name = #{record.modelName,jdbcType=VARCHAR},
      model_series = #{record.modelSeries,jdbcType=VARCHAR},
      brand_id = #{record.brandId,jdbcType=INTEGER},
      Art_No = #{record.artNo,jdbcType=VARCHAR},
      model_story = #{record.modelStory,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sneaker_model
    set model_id = #{record.modelId,jdbcType=INTEGER},
      model_name = #{record.modelName,jdbcType=VARCHAR},
      model_series = #{record.modelSeries,jdbcType=VARCHAR},
      brand_id = #{record.brandId,jdbcType=INTEGER},
      Art_No = #{record.artNo,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.yosneaker.store.dto.Model" >
    update sneaker_model
    <set >
      <if test="modelName != null" >
        model_name = #{modelName,jdbcType=VARCHAR},
      </if>
      <if test="modelSeries != null" >
        model_series = #{modelSeries,jdbcType=VARCHAR},
      </if>
      <if test="brandId != null" >
        brand_id = #{brandId,jdbcType=INTEGER},
      </if>
      <if test="artNo != null" >
        Art_No = #{artNo,jdbcType=VARCHAR},
      </if>
      <if test="modelStory != null" >
        model_story = #{modelStory,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where model_id = #{modelId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="org.yosneaker.store.dto.Model" >
    update sneaker_model
    set model_name = #{modelName,jdbcType=VARCHAR},
      model_series = #{modelSeries,jdbcType=VARCHAR},
      brand_id = #{brandId,jdbcType=INTEGER},
      Art_No = #{artNo,jdbcType=VARCHAR},
      model_story = #{modelStory,jdbcType=LONGVARCHAR}
    where model_id = #{modelId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.yosneaker.store.dto.Model" >
    update sneaker_model
    set model_name = #{modelName,jdbcType=VARCHAR},
      model_series = #{modelSeries,jdbcType=VARCHAR},
      brand_id = #{brandId,jdbcType=INTEGER},
      Art_No = #{artNo,jdbcType=VARCHAR}
    where model_id = #{modelId,jdbcType=INTEGER}
  </update>
  <sql id="MysqlSuffix" >
    <if test="page != null" >
      limit #{page.start} , #{page.rows}
    </if>
  </sql>
</mapper>
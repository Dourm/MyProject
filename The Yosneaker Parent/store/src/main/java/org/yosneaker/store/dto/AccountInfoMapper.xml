<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.yosneaker.store.dao.AccountInfoMapper" >
  <resultMap id="BaseResultMap" type="org.yosneaker.store.dto.AccountInfo" >
    <id column="account_information_id" property="accountInformationId" jdbcType="INTEGER" />
    <result column="account_information_account_id" property="accountInformationAccountId" jdbcType="INTEGER" />
    <result column="account_information_stature" property="accountInformationStature" jdbcType="REAL" />
    <result column="account_information_age" property="accountInformationAge" jdbcType="INTEGER" />
    <result column="account_information_weight" property="accountInformationWeight" jdbcType="REAL" />
    <result column="account_information_bounce" property="accountInformationBounce" jdbcType="REAL" />
    <result column="account_information_position" property="accountInformationPosition" jdbcType="VARCHAR" />
    <result column="account_information_ability" property="accountInformationAbility" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    account_information_id, account_information_account_id, account_information_stature, 
    account_information_age, account_information_weight, account_information_bounce, 
    account_information_position, account_information_ability
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.yosneaker.store.dto.AccountInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sneaker_account_information
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="MysqlSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sneaker_account_information
    where account_information_id = #{accountInformationId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sneaker_account_information
    where account_information_id = #{accountInformationId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.yosneaker.store.dto.AccountInfoExample" >
    delete from sneaker_account_information
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.yosneaker.store.dto.AccountInfo" >
    insert into sneaker_account_information (account_information_id, account_information_account_id, 
      account_information_stature, account_information_age, 
      account_information_weight, account_information_bounce, 
      account_information_position, account_information_ability
      )
    values (#{accountInformationId,jdbcType=INTEGER}, #{accountInformationAccountId,jdbcType=INTEGER}, 
      #{accountInformationStature,jdbcType=REAL}, #{accountInformationAge,jdbcType=INTEGER}, 
      #{accountInformationWeight,jdbcType=REAL}, #{accountInformationBounce,jdbcType=REAL}, 
      #{accountInformationPosition,jdbcType=VARCHAR}, #{accountInformationAbility,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.yosneaker.store.dto.AccountInfo" >
    insert into sneaker_account_information
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="accountInformationId != null" >
        account_information_id,
      </if>
      <if test="accountInformationAccountId != null" >
        account_information_account_id,
      </if>
      <if test="accountInformationStature != null" >
        account_information_stature,
      </if>
      <if test="accountInformationAge != null" >
        account_information_age,
      </if>
      <if test="accountInformationWeight != null" >
        account_information_weight,
      </if>
      <if test="accountInformationBounce != null" >
        account_information_bounce,
      </if>
      <if test="accountInformationPosition != null" >
        account_information_position,
      </if>
      <if test="accountInformationAbility != null" >
        account_information_ability,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="accountInformationId != null" >
        #{accountInformationId,jdbcType=INTEGER},
      </if>
      <if test="accountInformationAccountId != null" >
        #{accountInformationAccountId,jdbcType=INTEGER},
      </if>
      <if test="accountInformationStature != null" >
        #{accountInformationStature,jdbcType=REAL},
      </if>
      <if test="accountInformationAge != null" >
        #{accountInformationAge,jdbcType=INTEGER},
      </if>
      <if test="accountInformationWeight != null" >
        #{accountInformationWeight,jdbcType=REAL},
      </if>
      <if test="accountInformationBounce != null" >
        #{accountInformationBounce,jdbcType=REAL},
      </if>
      <if test="accountInformationPosition != null" >
        #{accountInformationPosition,jdbcType=VARCHAR},
      </if>
      <if test="accountInformationAbility != null" >
        #{accountInformationAbility,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.yosneaker.store.dto.AccountInfoExample" resultType="java.lang.Integer" >
    select count(*) from sneaker_account_information
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sneaker_account_information
    <set >
      <if test="record.accountInformationId != null" >
        account_information_id = #{record.accountInformationId,jdbcType=INTEGER},
      </if>
      <if test="record.accountInformationAccountId != null" >
        account_information_account_id = #{record.accountInformationAccountId,jdbcType=INTEGER},
      </if>
      <if test="record.accountInformationStature != null" >
        account_information_stature = #{record.accountInformationStature,jdbcType=REAL},
      </if>
      <if test="record.accountInformationAge != null" >
        account_information_age = #{record.accountInformationAge,jdbcType=INTEGER},
      </if>
      <if test="record.accountInformationWeight != null" >
        account_information_weight = #{record.accountInformationWeight,jdbcType=REAL},
      </if>
      <if test="record.accountInformationBounce != null" >
        account_information_bounce = #{record.accountInformationBounce,jdbcType=REAL},
      </if>
      <if test="record.accountInformationPosition != null" >
        account_information_position = #{record.accountInformationPosition,jdbcType=VARCHAR},
      </if>
      <if test="record.accountInformationAbility != null" >
        account_information_ability = #{record.accountInformationAbility,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sneaker_account_information
    set account_information_id = #{record.accountInformationId,jdbcType=INTEGER},
      account_information_account_id = #{record.accountInformationAccountId,jdbcType=INTEGER},
      account_information_stature = #{record.accountInformationStature,jdbcType=REAL},
      account_information_age = #{record.accountInformationAge,jdbcType=INTEGER},
      account_information_weight = #{record.accountInformationWeight,jdbcType=REAL},
      account_information_bounce = #{record.accountInformationBounce,jdbcType=REAL},
      account_information_position = #{record.accountInformationPosition,jdbcType=VARCHAR},
      account_information_ability = #{record.accountInformationAbility,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.yosneaker.store.dto.AccountInfo" >
    update sneaker_account_information
    <set >
      <if test="accountInformationAccountId != null" >
        account_information_account_id = #{accountInformationAccountId,jdbcType=INTEGER},
      </if>
      <if test="accountInformationStature != null" >
        account_information_stature = #{accountInformationStature,jdbcType=REAL},
      </if>
      <if test="accountInformationAge != null" >
        account_information_age = #{accountInformationAge,jdbcType=INTEGER},
      </if>
      <if test="accountInformationWeight != null" >
        account_information_weight = #{accountInformationWeight,jdbcType=REAL},
      </if>
      <if test="accountInformationBounce != null" >
        account_information_bounce = #{accountInformationBounce,jdbcType=REAL},
      </if>
      <if test="accountInformationPosition != null" >
        account_information_position = #{accountInformationPosition,jdbcType=VARCHAR},
      </if>
      <if test="accountInformationAbility != null" >
        account_information_ability = #{accountInformationAbility,jdbcType=VARCHAR},
      </if>
    </set>
    where account_information_id = #{accountInformationId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.yosneaker.store.dto.AccountInfo" >
    update sneaker_account_information
    set account_information_account_id = #{accountInformationAccountId,jdbcType=INTEGER},
      account_information_stature = #{accountInformationStature,jdbcType=REAL},
      account_information_age = #{accountInformationAge,jdbcType=INTEGER},
      account_information_weight = #{accountInformationWeight,jdbcType=REAL},
      account_information_bounce = #{accountInformationBounce,jdbcType=REAL},
      account_information_position = #{accountInformationPosition,jdbcType=VARCHAR},
      account_information_ability = #{accountInformationAbility,jdbcType=VARCHAR}
    where account_information_id = #{accountInformationId,jdbcType=INTEGER}
  </update>
  <sql id="MysqlSuffix" >
    <if test="page != null" >
      limit #{page.start} , #{page.rows}
    </if>
  </sql>
</mapper>